#include "DDSOscillator.h"

// Sine wave lookup table (scaled to full 16-bit signed range)
const int16_t DDSOscillator::sineLUT[DDSOscillator::LUT_SIZE] = {
		0, 804, 1608, 2410, 3212, 4011, 4808, 5602,
		6393, 7179, 7962, 8739, 9512, 10278, 11039, 11793,
		12539, 13279, 14010, 14732, 15446, 16151, 16846, 17530,
		18204, 18868, 19519, 20159, 20787, 21403, 22005, 22594,
		23170, 23731, 24279, 24811, 25329, 25832, 26319, 26790,
		27245, 27683, 28105, 28510, 28898, 29268, 29621, 29956,
		30273, 30571, 30852, 31113, 31356, 31580, 31785, 31971,
		32137, 32285, 32412, 32521, 32609, 32678, 32728, 32757,
		32767, 32757, 32728, 32678, 32609, 32521, 32412, 32285,
		32137, 31971, 31785, 31580, 31356, 31113, 30852, 30571,
		30273, 29956, 29621, 29268, 28898, 28510, 28105, 27683,
		27245, 26790, 26319, 25832, 25329, 24811, 24279, 23731,
		23170, 22594, 22005, 21403, 20787, 20159, 19519, 18868,
		18204, 17530, 16846, 16151, 15446, 14732, 14010, 13279,
		12539, 11793, 11039, 10278, 9512, 8739, 7962, 7179,
		6393, 5602, 4808, 4011, 3212, 2410, 1608, 804,
		0, -804, -1608, -2410, -3212, -4011, -4808, -5602,
		-6393, -7179, -7962, -8739, -9512, -10278, -11039, -11793,
		-12539, -13279, -14010, -14732, -15446, -16151, -16846, -17530,
		-18204, -18868, -19519, -20159, -20787, -21403, -22005, -22594,
		-23170, -23731, -24279, -24811, -25329, -25832, -26319, -26790,
		-27245, -27683, -28105, -28510, -28898, -29268, -29621, -29956,
		-30273, -30571, -30852, -31113, -31356, -31580, -31785, -31971,
		-32137, -32285, -32412, -32521, -32609, -32678, -32728, -32757,
		-32767, -32757, -32728, -32678, -32609, -32521, -32412, -32285,
		-32137, -31971, -31785, -31580, -31356, -31113, -30852, -30571,
		-30273, -29956, -29621, -29268, -28898, -28510, -28105, -27683,
		-27245, -26790, -26319, -25832, -25329, -24811, -24279, -23731,
		-23170, -22594, -22005, -21403, -20787, -20159, -19519, -18868,
		-18204, -17530, -16846, -16151, -15446, -14732, -14010, -13279,
		-12539, -11793, -11039, -10278, -9512, -8739, -7962, -7179,
		-6393, -5602, -4808, -4011, -3212, -2410, -1608, -804
};

const int16_t DDSOscillator::triangleLUT[256] = {
    -32768, -32257, -31745, -31233, -30721, -30209, -29697, -29185,
    -28673, -28161, -27649, -27137, -26625, -26113, -25601, -25089,
    -24577, -24065, -23553, -23041, -22529, -22017, -21505, -20993,
    -20481, -19969, -19457, -18945, -18433, -17921, -17409, -16897,
    -16385, -15873, -15361, -14849, -14337, -13825, -13313, -12801,
    -12289, -11777, -11265, -10753, -10241,  -9729,  -9217,  -8705,
     -8193,  -7681,  -7169,  -6657,  -6145,  -5633,  -5121,  -4609,
     -4097,  -3585,  -3073,  -2561,  -2049,  -1537,  -1025,   -513,
        -1,    511,   1023,   1535,   2047,   2559,   3071,   3583,
      4095,   4607,   5119,   5631,   6143,   6655,   7167,   7679,
      8191,   8703,   9215,   9727,  10239,  10751,  11263,  11775,
     12287,  12799,  13311,  13823,  14335,  14847,  15359,  15871,
     16383,  16895,  17407,  17919,  18431,  18943,  19455,  19967,
     20479,  20991,  21503,  22015,  22527,  23039,  23551,  24063,
     24575,  25087,  25599,  26111,  26623,  27135,  27647,  28159,
     28671,  29183,  29695,  30207,  30719,  31231,  31743,  32255,
     32767,  32255,  31743,  31231,  30719,  30207,  29695,  29183,
     28671,  28159,  27647,  27135,  26623,  26111,  25599,  25087,
     24575,  24063,  23551,  23039,  22527,  22015,  21503,  20991,
     20479,  19967,  19455,  18943,  18431,  17919,  17407,  16895,
     16383,  15871,  15359,  14847,  14335,  13823,  13311,  12799,
     12287,  11775,  11263,  10751,  10239,   9727,   9215,   8703,
      8191,   7679,   7167,   6655,   6143,   5631,   5119,   4607,
      4095,   3583,   3071,   2559,   2047,   1535,   1023,    511,
        -1,   -513,  -1025,  -1537,  -2049,  -2561,  -3073,  -3585,
     -4097,  -4609,  -5121,  -5633,  -6145,  -6657,  -7169,  -7681,
     -8193,  -8705,  -9217,  -9729, -10241, -10753, -11265, -11777,
    -12289, -12801, -13313, -13825, -14337, -14849, -15361, -15873,
    -16385, -16897, -17409, -17921, -18433, -18945, -19457, -19969,
    -20481, -20993, -21505, -22017, -22529, -23041, -23553, -24065,
    -24577, -25089, -25601, -26113, -26625, -27137, -27649, -28161,
    -28673, -29185, -29697, -30209, -30721, -31233, -31745, -32257,
};

const int16_t DDSOscillator::sawLUT[256] = {
		-32767, -32512, -32256, -32000, -31744, -31488, -31232, -30976,
		-30720, -30464, -30208, -29952, -29696, -29440, -29184, -28928,
		-28672, -28416, -28160, -27904, -27648, -27392, -27136, -26880,
		-26624, -26368, -26112, -25856, -25600, -25344, -25088, -24832,
		-24576, -24320, -24064, -23808, -23552, -23296, -23040, -22784,
		-22528, -22272, -22016, -21760, -21504, -21248, -20992, -20736,
		-20480, -20224, -19968, -19712, -19456, -19200, -18944, -18688,
		-18432, -18176, -17920, -17664, -17408, -17152, -16896, -16640,
		-16384, -16128, -15872, -15616, -15360, -15104, -14848, -14592,
		-14336, -14080, -13824, -13568, -13312, -13056, -12800, -12544,
		-12288, -12032, -11776, -11520, -11264, -11008, -10752, -10496,
		-10240,  -9984,  -9728,  -9472,  -9216,  -8960,  -8704,  -8448,
		-8192,  -7936,  -7680,  -7424,  -7168,  -6912,  -6656,  -6400,
		-6144,  -5888,  -5632,  -5376,  -5120,  -4864,  -4608,  -4352,
		-4096,  -3840,  -3584,  -3328,  -3072,  -2816,  -2560,  -2304,
		-2048,  -1792,  -1536,  -1280,  -1024,   -768,   -512,   -256,
		0,    255,    511,    767,   1023,   1279,   1535,   1791,
		2047,   2303,   2559,   2815,   3071,   3327,   3583,   3839,
		4095,   4351,   4607,   4863,   5119,   5375,   5631,   5887,
		6143,   6399,   6655,   6911,   7167,   7423,   7679,   7935,
		8191,   8447,   8703,   8959,   9215,   9471,   9727,   9983,
		10239,  10495,  10751,  11007,  11263,  11519,  11775,  12031,
		12287,  12543,  12799,  13055,  13311,  13567,  13823,  14079,
		14335,  14591,  14847,  15103,  15359,  15615,  15871,  16127,
		16383,  16639,  16895,  17151,  17407,  17663,  17919,  18175,
		18431,  18687,  18943,  19199,  19455,  19711,  19967,  20223,
		20479,  20735,  20991,  21247,  21503,  21759,  22015,  22271,
		22527,  22783,  23039,  23295,  23551,  23807,  24063,  24319,
		24575,  24831,  25087,  25343,  25599,  25855,  26111,  26367,
		26623,  26879,  27135,  27391,  27647,  27903,  28159,  28415,
		28671,  28927,  29183,  29439,  29695,  29951,  30207,  30463,
		30719,  30975,  31231,  31487,  31743,  31999,  32255,  32511
};


void DDSOscillator::setFrequency(float freq) {
    frequency = freq;
    updatePhaseIncrement();
}

void DDSOscillator::setWaveform(Waveform wf) {
    waveform = wf;
}

int16_t DDSOscillator::nextSample() {
	phaseAccumulator += phaseIncrement;
	uint8_t index = phaseAccumulator >> 24; // 8 MSBs for 256-entry LUT
	//    return sineLUT[index];
	switch (waveform) {
	case Waveform::SINE:
		return sineLUT[index];
	case Waveform::TRIANGLE:
		return triangleLUT[index];
	case Waveform::SAW:
		return sawLUT[index];
	case Waveform::SQUARE:
		return (index < LUT_SIZE / 2) ? 32767 : -32767;
	default:
		return 0;
	}
}

int16_t DDSOscillator::nextStereoSample() {
    return nextSample(); // Same sample for both L/R channels (duplicate mono)
}

void DDSOscillator::setSampleRate(float rate) {
    sampleRate = rate;
    updatePhaseIncrement();
}

void DDSOscillator::updatePhaseIncrement() {
    // Assume 32-bit phase accumulator: 2^32 full cycle
    phaseIncrement = static_cast<uint32_t>((frequency * 4294967296.0f) / sampleRate);
}
